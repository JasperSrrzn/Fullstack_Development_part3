{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/PersonsResultSet.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Filter","searchName","handleSearchName","value","onChange","PersonForm","newName","handleNewName","newNumber","handleNewNumber","addNewPerson","type","onClick","PersonsResultSet","persons","handleDelete","filter","person","name","toLowerCase","includes","map","key","number","Notification","message","color","className","style","baseUrl","axios","get","then","response","data","newPerson","post","id","delete","updatedPerson","put","App","useState","setPersons","setNewName","setNewNumber","setSearchName","notificationMessage","setNotificationMessage","notificationColor","setNotificationColor","useEffect","personService","initialPersons","event","target","preventDefault","filteredPersons","length","window","confirm","catch","error","setTimeout","alert","returnedPerson","concat","personToDelete","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4b2c189b.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({searchName, handleSearchName}) => {\n  return (\n    <div>\n    filter shown with <input value={searchName} onChange={handleSearchName}/>\n    </div>\n  )\n}\n\nexport default Filter\n","import React from 'react';\n\nconst PersonForm = ({newName, handleNewName, newNumber, handleNewNumber, addNewPerson}) => {\n  return (\n    <form>\n      <div>\n        name: <input value={newName} onChange={handleNewName}/>\n      </div>\n      <div>\n        number: <input value={newNumber} onChange={handleNewNumber}/>\n      </div>\n      <div>\n        <button type=\"submit\" onClick={addNewPerson}>add</button>\n      </div>\n    </form>\n  )\n}\n\nexport default PersonForm\n","import React from 'react';\n\nconst PersonsResultSet = ({persons, searchName, handleDelete}) => {\n\n  return (\n    <div>\n    {persons.filter(person=>person.name.toLowerCase().includes(searchName.toLowerCase()))\n            .map(person=><p key={person.name}>{person.name} {person.number}<button onClick={handleDelete(person)}>delete</button></p>)}\n    </div>\n  )\n}\n\nexport default PersonsResultSet\n","import React from 'react';\n\nconst Notification = ({message,color}) => {\n  if (message===null){\n    return null\n  }\n\n  return (\n    <div className=\"notification\" style={{color:color}}>\n      {message}\n    </div>\n  )\n}\n\n\nexport default Notification\n","import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\n\nconst getAll = () => {\n  return axios\n            .get(baseUrl)\n            .then(response=>response.data)\n}\n\nconst addPerson = (newPerson) => {\n  return axios\n            .post(baseUrl, newPerson)\n            .then(response=>response.data)            \n}\n\nconst deletePerson = (id) => {\n  return axios.delete(`${baseUrl}/${id}`)\n}\n\nconst replaceNumber = (id, updatedPerson) => {\n  return axios\n            .put(`${baseUrl}/${id}`, updatedPerson)\n            .then(response=>response.data)\n}\n\n\nexport default {getAll, addPerson, deletePerson, replaceNumber}\n","import React, { useState, useEffect} from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport PersonsResultSet from './components/PersonsResultSet'\nimport Notification from './components/Notification'\nimport personService from './services/persons'\nimport './index.css'\n\n\n\nconst App = () => {\n\n  const [ persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber] = useState('')\n  const [ searchName, setSearchName] = useState('')\n  const [ notificationMessage, setNotificationMessage] = useState(null)\n  const [ notificationColor, setNotificationColor] = useState(null)\n\n  useEffect(()=>{\n    personService\n      .getAll()\n      .then(initialPersons=>{\n        setPersons(initialPersons)\n      })\n  },[])\n\n  const handleDelete = (personToDelete) =>  () => {\n    if (window.confirm(`Delete ${personToDelete.name} ?`)){\n      setPersons(persons.filter(person=>person.id !== personToDelete.id))\n      personService.deletePerson(personToDelete.id)\n    }\n  }\n\n  const addNewPerson = (event) => {\n\n    event.preventDefault()\n\n    const filteredPersons = persons.filter(person=> person.name.toLowerCase() === newName.toLowerCase())\n\n    if (filteredPersons.length > 0 ){\n\n      if(window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)){\n\n        const updatedPerson = {...filteredPersons[0], number: newNumber}\n        personService\n              .replaceNumber(filteredPersons[0].id, updatedPerson)\n              .catch(error=>{\n                setNotificationColor('red')\n                setNotificationMessage(`Information of ${updatedPerson.name} has already been removed from server`)\n                setTimeout(()=>{\n                  setNotificationMessage(null)\n                  setNotificationColor(null)\n                }, 5000)\n                setPersons(persons.filter(person=>person.name!==newName))\n              })\n        setPersons(persons.map(person=>person.id !== filteredPersons[0].id?person:updatedPerson))\n\n      }\n    } else if (persons.filter(person=> person.number === newNumber).length > 0){\n\n      alert(`${newNumber} is already used by someone in the phonebook`)\n\n    } else {\n      const newPerson = {name: newName, number: newNumber}\n      personService\n        .addPerson(newPerson)\n        .then(returnedPerson=>{\n            setPersons(persons.concat(returnedPerson))\n            setNotificationColor('green')\n            setNotificationMessage(`Added ${newName}`)\n            setTimeout(() => {\n              setNotificationMessage(null)\n              setNotificationColor(null)\n            },5000)\n        })\n        .catch(error=>{\n          setNotificationColor('red')\n          setNotificationMessage(error.response.data.error)\n          setTimeout(() => {\n            setNotificationMessage(null)\n            setNotificationColor(null)\n          },5000)\n        })\n      }\n    }\n\n  const handleNewName = (event) => setNewName(event.target.value)\n  const handleNewNumber = (event) => setNewNumber(event.target.value)\n  const handleSearchName = (event) => setSearchName(event.target.value)\n\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notificationMessage} color={notificationColor}/>\n      < Filter searchName={searchName} handleSearchName={handleSearchName}/>\n      <h3>add a new</h3>\n      <PersonForm newName={newName} handleNewName={handleNewName} newNumber={newNumber} handleNewNumber={handleNewNumber} addNewPerson={addNewPerson}/>\n      <h3>Numbers</h3>\n      <PersonsResultSet persons={persons} searchName={searchName} handleDelete={handleDelete}/>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}